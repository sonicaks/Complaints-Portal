# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

stages:

- stage: 'Build'
  displayName: 'Build'

  jobs:

  - job: 'Build'
    pool:
      vmImage: "vs2017-win2016"
    strategy:
      matrix:
        Python36:
          PYTHON_VERSION: '3.6'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(PYTHON_VERSION)'
        architecture: 'x64'

    - task: PythonScript@0
      displayName: 'Export project path'
      inputs:
        scriptSource: 'inline'
        script: |
          """Search all subdirectories for `manage.py`."""
          from glob import iglob
          from os import path
          # Python >= 3.5
          manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
          if not manage_py:
              raise SystemExit('Could not find a Django project')
          project_location = path.dirname(path.abspath(manage_py))
          print('Found Django project in', project_location)
          print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

    - script: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install unittest-xml-reporting
      displayName: 'Install prerequisites'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: 'Deploy'
  displayName: 'Deploy'

  jobs:

  - job: 'Deploy'
    pool:
      vmImage: "vs2017-win2016"
    strategy:
      matrix:
        Python36:
          PYTHON_VERSION: '3.6'

    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Visual Studio Enterprise Subscription(f5564428-fa11-4339-8b07-2abed455e85d)'
        appType: 'webApp'
        WebAppName: 'complaints-portal-dev'
        packageForLinux: '$(System.ArtifactsDirectory)/drop/*.zip'